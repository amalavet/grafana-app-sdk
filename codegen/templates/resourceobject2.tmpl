//
// Code generated by grafana-app-sdk. DO NOT EDIT.
//

package {{.Package}}{{$root := .}}

import (
    "github.com/grafana/grafana-app-sdk/resource"
    metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
    "k8s.io/apimachinery/pkg/runtime/schema"
)

type {{.ObjectTypeName}} struct {
    metav1.TypeMeta `json:",inline"`
    metav1.ObjectMeta `json:"metadata"`
    Spec       {{.SpecTypeName}} `json:"spec"`{{ range .Subresources }}{{ if ne .Comment "" }}
        // {{.Comment }}{{end}}
        {{ .TypeName }} {{.TypeName}} `json:"{{.JSONName}}"`{{ end }}
}

func ({{.ObjectShortName}} *{{.ObjectTypeName}}) GetSpec() any {
    return {{.ObjectShortName}}.Spec
}

func ({{.ObjectShortName}} *{{.ObjectTypeName}}) GetSubresources() map[string]any {
    return map[string]any{ {{ range .Subresources }}
        "{{.JSONName}}": {{$root.ObjectShortName}}.{{.TypeName}},
    {{ end }} }
}

func ({{.ObjectShortName}} *{{.ObjectTypeName}}) GetStaticMetadata() resource.StaticMetadata {
    return resource.StaticMetadata{
        Name:      {{.ObjectShortName}}.ObjectMeta.Name,
    	Namespace: {{.ObjectShortName}}.ObjectMeta.Namespace,
    	Group:     {{.ObjectShortName}}.GroupVersionKind().Group,
    	Version:   {{.ObjectShortName}}.GroupVersionKind().Version,
    	Kind:      {{.ObjectShortName}}.GroupVersionKind().Kind,
    }
}

func ({{.ObjectShortName}} *{{.ObjectTypeName}}) SetStaticMetadata(metadata resource.StaticMetadata) {
    {{.ObjectShortName}}.Name = metadata.Name
    {{.ObjectShortName}}.Namespace = metadata.Namespace
    {{.ObjectShortName}}.SetGroupVersionKind(schema.GroupVersionKind{
        Group:   metadata.Group,
        Version: metadata.Version,
        Kind:    metadata.Kind,
    })
}

{{range .CustomMetadataFields}}func ({{$root.ObjectShortName}} *{{$root.ObjectTypeName}}) Get{{.FieldName}}() {{.GoType}} {
    return {{$root.ObjectShortName}}.ObjectMeta.Annotations["{{.JSONName}}"]
}

func ({{$root.ObjectShortName}} *{{$root.ObjectTypeName}}) Set{{.FieldName}}({{.JSONName}} {{.GoType}}) {
    {{$root.ObjectShortName}}.ObjectMeta.Annotations["{{.JSONName}}"] = {{.JSONName}}
}{{end}}

// TODO: DeepCopyObject

// Interface compliance compile-time check
var _ resource.Object2 = &Object{}
