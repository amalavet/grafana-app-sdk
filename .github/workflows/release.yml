name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    # git checkout
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Go env
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: "1.22"
    # make test
    - name: Test
      run: go test -v ./...
  cli-test:
    runs-on: ubuntu-latest
    steps:
      # git checkout
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      # Go env
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"
      # Install the CLI
      - name: Install the CLI
        run: cd cmd/grafana-app-sdk && go install && cd -
      # Generate code
      - name: Generate code from test file
        run: |
          mkdir -p codegen-tests && cd codegen-tests
          grafana-app-sdk project init codegen-tests
          cp ../codegen/cuekind/testing/customkind.cue kinds/customkind.cue
          grafana-app-sdk generate --kindgrouping=kind
          mkdir -p cmp && cp -R ../codegen/testing/golden_generated/go/groupbykind/customkind cmp/customkind
          find ./cmp -iname '*.txt' -exec bash -c 'mv -- "$1" "${1%.txt}"' bash {} \;
          diff pkg/generated/resource/customkind cmp/customkind > diff.txt
          cat diff.txt
          sed -i '/^Common subdirectories/d' diff.txt
          difflines=$(wc -l diff.txt | awk '{ print $1 }')
          echo "DiffLines=${difflines}" >> $GITHUB_ENV
      - name: Compare generated code
        if: ${{ env.DiffLines != '0' }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed('Code generated by `grafana-app-sdk generate` does not match golden files in `codegen/testing/golden_generated` (diff was ${{ env.DiffLines }} lines long, check output of previous step)')
  release:
    needs: [test, cli-test]
    runs-on: ubuntu-latest
    steps:
    # git checkout
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    # Go env
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'
    # Release
    - name: Create Release
      uses: goreleaser/goreleaser-action@v4
      with:
        distribution: goreleaser
        version: latest
        args: release --clean
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
